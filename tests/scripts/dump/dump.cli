#!/usr/bin/env clitest --v0

# Test dump and restore functionality

ignore {
    ? Newer version of gel tool exists %{GREEDYDATA}
    ! database connection argument is deprecated in favor of 'branch'
    ! 'database create' is deprecated in Gel 5+. Please use 'branch create'
    ! Connecting to Gel instance '%{DATA}' at %{HOSTPORT}...
}

using tempdir;

if TARGET_OS == "Windows" {
    $ wsl -l -v
    *
}

defer {
    if TARGET_OS == "Windows" {
        $ wsl -l -v
        *
    }
}

for INSTANCE in "dump_restore" "dump_restore2" {
    $ gel instance destroy -I $INSTANCE --force
    %EXIT any
    *
}

$ gel instance create -I dump_restore
*
! Instance dump_restore is up and running.
*

# Log the instance logs in the background to help debug failures
background {
    $ gel instance logs --tail 10 --follow -I dump_restore
    %EXIT any
    *
}

$ gel database create -I dump_restore dump_01
! OK: CREATE DATABASE

$ gel -I dump_restore --database dump_01 query "CREATE TYPE Hello { CREATE REQUIRED PROPERTY name -> str; }"
! OK: CREATE TYPE
$ gel -I dump_restore --database dump_01 query "INSERT Hello { name := 'world' }"
? {"id": "%{UUID}"}

$ mkdir dump

$ gel -I dump_restore --database dump_01 dump dump/dump_01.dump
*
! Starting dump for database `'dump_01'`...

$ gel -I dump_restore database create restore_01
! OK: CREATE DATABASE

$ gel -I dump_restore --database restore_01 restore dump/dump_01.dump
*
! Restore completed

$ gel -I dump_restore --database restore_01 query "SELECT Hello.name"
! "world"

# Test dump --all without format
$ gel -I dump_restore dump --all "will-not-exist"
%EXIT 1
! gel error: `--format=dir` is required when using `--all`
*

# Test dump and restore all databases
$ gel -I dump_restore database create dump_02
! OK: CREATE DATABASE
$ gel -I dump_restore --database dump_02 query "CREATE TYPE Hello { CREATE REQUIRED PROPERTY name -> str; }"
! OK: CREATE TYPE
$ gel -I dump_restore --database dump_02 query "INSERT Hello { name := 'world' }"
? {"id": "%{UUID}"}

# Ensure that the password between the two instances matches
$ echo "password" | gel -I dump_restore instance reset-password --password-from-stdin
! Password was successfully changed and saved.

$ gel -I dump_restore dump --all --format=dir ./dump_all
repeat {
    ? Starting dump for database %{GREEDYDATA}
}

# Start a new server instance for restore
$ gel instance create -I dump_restore2
*
! Instance dump_restore2 is up and running.
*

# Ensure that the password between the two instances matches
$ echo "password" | gel -I dump_restore2 instance reset-password --password-from-stdin
! Password was successfully changed and saved.

background {
    $ gel -I dump_restore2 instance logs --tail 10 --follow
    %EXIT any
    *
}

$ gel -I dump_restore2 restore --all ./dump_all
repeat {
    !
    ? Restoring database from file %{GREEDYDATA}
    ! Restore completed
}

$ gel -I dump_restore2 --database dump_01 query "SELECT Hello.name"
! "world"

$ gel -I dump_restore2 --database dump_02 query "SELECT Hello.name"
! "world"
